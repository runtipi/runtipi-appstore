{
  "$schema": "../dynamic-compose-schema.json",
  "services": [
    {
      "name": "invidious",
      "image": "quay.io/invidious/invidious:master",
      "isMain": true,
      "internalPort": 3000,
      "environment": {
        "INVIDIOUS_CONFIG": "db:\n  dbname: invidious\n  user: tipi\n  password: tipi\n  host: invidious-db\n  port: 5432\ncheck_tables: true\nhmac_key: ${INVIDIOUS_HMAC_KEY}\nuse_innertube_for_captions: true\ndomain: ${INVIDIOUS_DOMAIN}\nexternal_port: ${INVIDIOUS_EXTERNAL_PORT:-${APP_PORT}}\nhttps_only: ${INVIDIOUS_HTTPS_ONLY}\nsignature_server: inv_sig_helper:12999\nvisitor_data: ${INVIDIOUS_VISITOR_DATA}\npo_token: ${INVIDIOUS_PO_TOKEN}\n"
      },
      "dependsOn": {
        "invidious-db": {
          "condition": "service_healthy"
        },
        "inv_sig_helper": {
          "condition": "service_started"
        }
      },
      "healthCheck": {
        "interval": "30s",
        "timeout": "5s",
        "retries": 2,
        "test": "wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/trending || exit 1"
      }
    },
    {
      "name": "inv_sig_helper",
      "image": "quay.io/invidious/inv-sig-helper:latest",
      "environment": {
        "RUST_LOG": "info"
      },
      "readOnly": true,
      "command": ["--tcp", "0.0.0.0:12999"],
      "capDrop": ["ALL"],
      "securityOpt": ["no-new-privileges:true"]
    },
    {
      "name": "invidious-db",
      "image": "postgres:14",
      "environment": {
        "POSTGRES_DB": "invidious",
        "POSTGRES_USER": "tipi",
        "POSTGRES_PASSWORD": "tipi"
      },
      "volumes": [
        {
          "hostPath": "${APP_DATA_DIR}/data/postgres",
          "containerPath": "/var/lib/postgresql/data"
        },
        {
          "hostPath": "${APP_DATA_DIR}/data/init/sql",
          "containerPath": "/config/sql"
        },
        {
          "hostPath": "${APP_DATA_DIR}/data/init/init-invidious-db.sh",
          "containerPath": "/docker-entrypoint-initdb.d/init-invidious-db.sh"
        }
      ],
      "healthCheck": {
        "test": "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      }
    }
  ]
}
