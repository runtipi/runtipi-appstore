version: '3.7'
services:
  changedetection:
    image: ghcr.io/dgtlmoon/changedetection.io:0.50.2
    container_name: changedetection
    hostname: changedetection
    volumes:
      - ${APP_DATA_DIR}/data:/datastore
    ports:
      - ${APP_PORT}:5000
    restart: unless-stopped
    networks:
      - tipi_main_network
    labels:
      traefik.enable: true
      traefik.http.middlewares.changedetection-web-redirect.redirectscheme.scheme: https
      traefik.http.services.changedetection.loadbalancer.server.port: 5000
      traefik.http.routers.changedetection-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.changedetection-insecure.entrypoints: web
      traefik.http.routers.changedetection-insecure.service: changedetection
      traefik.http.routers.changedetection-insecure.middlewares: changedetection-web-redirect
      traefik.http.routers.changedetection.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.changedetection.entrypoints: websecure
      traefik.http.routers.changedetection.service: changedetection
      traefik.http.routers.changedetection.tls.certresolver: myresolver
      traefik.http.routers.changedetection-local-insecure.rule: Host(`changedetection.${LOCAL_DOMAIN}`)
      traefik.http.routers.changedetection-local-insecure.entrypoints: web
      traefik.http.routers.changedetection-local-insecure.service: changedetection
      traefik.http.routers.changedetection-local-insecure.middlewares: changedetection-web-redirect
      traefik.http.routers.changedetection-local.rule: Host(`changedetection.${LOCAL_DOMAIN}`)
      traefik.http.routers.changedetection-local.entrypoints: websecure
      traefik.http.routers.changedetection-local.service: changedetection
      traefik.http.routers.changedetection-local.tls: true
      runtipi.managed: true
