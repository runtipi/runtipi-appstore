version: '3.9'
services:
  nginx:
    image: nginx:1.28.0
    container_name: nginx
    restart: unless-stopped
    ports:
      - ${APP_PORT}:80
    networks:
      - tipi_main_network
    labels:
      traefik.enable: true
      traefik.http.middlewares.nginx-web-redirect.redirectscheme.scheme: https
      traefik.http.services.nginx.loadbalancer.server.port: 80
      traefik.http.routers.nginx-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.nginx-insecure.entrypoints: web
      traefik.http.routers.nginx-insecure.service: nginx
      traefik.http.routers.nginx-insecure.middlewares: nginx-web-redirect
      traefik.http.routers.nginx.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.nginx.entrypoints: websecure
      traefik.http.routers.nginx.service: nginx
      traefik.http.routers.nginx.tls.certresolver: myresolver
      traefik.http.routers.nginx-local-insecure.rule: Host(`nginx.${LOCAL_DOMAIN}`)
      traefik.http.routers.nginx-local-insecure.entrypoints: web
      traefik.http.routers.nginx-local-insecure.service: nginx
      traefik.http.routers.nginx-local-insecure.middlewares: nginx-web-redirect
      traefik.http.routers.nginx-local.rule: Host(`nginx.${LOCAL_DOMAIN}`)
      traefik.http.routers.nginx-local.entrypoints: websecure
      traefik.http.routers.nginx-local.service: nginx
      traefik.http.routers.nginx-local.tls: true
      runtipi.managed: true
